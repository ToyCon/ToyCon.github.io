{"componentChunkName":"component---src-templates-blog-post-js","path":"/175/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"b5ce31a8-c930-5908-85fa-654a99768984","excerpt":"최댓값 만들기 (2) https://school.programmers.co.kr/learn/courses/30/lessons/120862 변수 정수 배열 numbers 제한 -10,000 ≤ numbers의 원소 ≤ 10,000 2 ≤ numbers 의 길이 ≤ 10…","html":"<h3>최댓값 만들기 (2)</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120862\">https://school.programmers.co.kr/learn/courses/30/lessons/120862</a></p>\n<h4>변수</h4>\n<p>정수 배열 numbers</p>\n<h4>제한</h4>\n<p>-10,000 ≤ numbers의 원소 ≤ 10,000<br>\n2 ≤ numbers 의 길이 ≤ 100</p>\n<h4>풀이</h4>\n<p>처음에는 조건이 매우 까다롭다고 생각했다. 두 번째로 큰 수가 0이거나, 혹은 숫자가 하나만 양수고 나머지 숫자가 모두 음수이거나 하는 경우를 생각해봤다. 그런데 더 고민해보니 음수와 음수를 곱할 경우 양수가 되니 그냥 음수와 양수를 곱하는 경우만 피하면 된다는 결론이 나왔다. numbers에 100개의 원소가 다 들어있고 양수가 50개, 음수가 50개 들어있는 경우를 가정하여, 오름차순으로 정렬한뒤 numbers의 맨 앞의 원소 두개의 곱과 맨 뒤의 원소 두개의 곱을 비교하는 방법을 생각했다. numbers의 원소가 최소 2개이기 때문에, 모든 경우에 이 방법을 적용할 수 있다고 생각하여 이 방법 그대로 답을 반환했다.</p>\n<ol>\n<li>상수 arr 선언하고 [...numbers].sort((a, b) => b - a) 할당</li>\n<li>변수 length 선언하고 Number(arr.length) - 1 할당</li>\n<li>삼항연산자로 arr[0] * arr[1] >= arr[length] * arr[length - 1] 확인</li>\n<li>맞으면 arr[0] * [1] 반환, 틀리면 arr[length] * arr[length - 1] 반환</li>\n</ol>\n<h4>코드</h4>\n<p>다른 풀이를 보니 방식은 똑같고 삼항연산자 대신 Math.max 메서드로 두 값을 비교했는데 이 쪽이 더 깔끔해보인다. 아직 메서드 사용이 서투른 것 같다. 더 공부해야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>numbers<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> length <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> arr<span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> arr<span class=\"token punctuation\">[</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> arr<span class=\"token punctuation\">[</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"최댓값 만들기 (2)","date":"May 04, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120862"}},"previous":{"fields":{"slug":"/174/"},"frontmatter":{"title":"TIL6"}},"next":{"fields":{"slug":"/176/"},"frontmatter":{"title":"TIL7"}}},"pageContext":{"id":"b5ce31a8-c930-5908-85fa-654a99768984","previousPostId":"c7eb84ec-851f-53c7-85c1-95c7710dc69c","nextPostId":"d803a679-b592-57a5-a59b-6d057b2b8ae6"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}