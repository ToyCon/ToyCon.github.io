{"componentChunkName":"component---src-templates-blog-post-js","path":"/183/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"7f343d5b-8352-592c-8e90-00bae2b5f349","excerpt":"외계어 사전 https://school.programmers.co.kr/learn/courses/30/lessons/120869 변수 배열 spell 사전 dic 제한 spell과 dic의 원소는 알파벳 소문자로만 이루어져 있음 2 ≤ spell의 크기 ≤ 10 spell…","html":"<h3>외계어 사전</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120869\">https://school.programmers.co.kr/learn/courses/30/lessons/120869</a></p>\n<h4>변수</h4>\n<p>배열 spell<br>\n사전 dic</p>\n<h4>제한</h4>\n<p>spell과 dic의 원소는 알파벳 소문자로만 이루어져 있음<br>\n2 ≤ spell의 크기 ≤ 10<br>\nspell의 원소의 길이는 1<br>\n1 ≤ dic의 크기 ≤ 10<br>\n1 ≤ dic의 원소의 길이 ≤ 10<br>\nspell의 원소를 모두 사용<br>\nspell의 원소를 모두 사용해 만들 수 있는 단어는 dic에 두 개 이상 존재하지 않음<br>\ndic과 spell 모두 중복된 원소를 갖지 않음</p>\n<h4>풀이</h4>\n<p>알파벳 문자는 배열에 담은 상태에서 sort 메서드로 정렬이 가능하기 때문에, 알파벳을 오름차순으로 정렬한 값을 비교하여 일치하는 값이 있는지 확인하는 방식으로 풀었다.</p>\n<ol>\n<li>변수 res 선언하고 2 할당</li>\n<li>변수 word 선언하고 spell을 오름차순으로 정렬한 뒤 string 타입으로 묶어서 할당</li>\n<li>변수 dictionary 선언하고 2와 같은 과정으로 원소를 오름차순으로 정렬한 배열을 할당</li>\n<li>배열의 모든 원소 중 word와 같은 값이 있는지 확인하여 있으면 res에 1 할당</li>\n<li>res 반환</li>\n</ol>\n<h4>코드</h4>\n<p>some 메서드를 사용해서 아주 쉽게 푼 문제가 있었다. 꼭 기억해야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spell<span class=\"token punctuation\">,</span> dic</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//기본값으로 일치하는 항목이 없다고 가정하고 2 할당</span>\n    <span class=\"token keyword\">let</span> word <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>spell<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//알파벳 순으로 정렬</span>\n    <span class=\"token keyword\">let</span> dictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>dic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//dic의 원소를 알파벳 순으로 정렬, word와 같은 방식</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dictionary<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e <span class=\"token operator\">===</span> word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//dictonary의 원소 중 word와 같은 원소가 있으면 res를 1로 변환</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"외계어 사전","date":"May 12, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120869"}},"previous":{"fields":{"slug":"/182/"},"frontmatter":{"title":"TIL10"}},"next":{"fields":{"slug":"/184/"},"frontmatter":{"title":"TIL11"}}},"pageContext":{"id":"7f343d5b-8352-592c-8e90-00bae2b5f349","previousPostId":"25a02de1-7508-5896-b302-22f3ec0ec60e","nextPostId":"794ef6a8-190c-52ef-b063-4da30c1e96ae"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}