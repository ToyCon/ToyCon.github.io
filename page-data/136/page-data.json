{"componentChunkName":"component---src-templates-blog-post-js","path":"/136/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"09e8c28e-0fbb-53c3-9a11-22c38d5821ee","excerpt":"짝수 홀수 개수 https://school.programmers.co.kr/learn/courses/30/lessons/120824 변수 정수 배열 num_list 제한사항 1 ≤ num_list의 길이 ≤ 100 0 ≤ num_list의 원소 ≤ 1,00…","html":"<h3>짝수 홀수 개수</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120824\">https://school.programmers.co.kr/learn/courses/30/lessons/120824</a></p>\n<h4>변수</h4>\n<p>정수 배열 num_list</p>\n<h4>제한사항</h4>\n<p>1 ≤ num_list의 길이 ≤ 100<br>\n0 ≤ num_list의 원소 ≤ 1,000</p>\n<h4>풀이</h4>\n<p>다른 문제의 풀이를 보면서 reduce 메서드를 통해 하나의 배열로 묶어서 반환하는 방식을 봤는데 직접 시도해보니 잘 되지 않았다. 별도의 배열을 선언해서 풀었다.</p>\n<ol>\n<li>상수 res 선언하고 [0, 0] 할당</li>\n<li>num_list에 forEach 적용, 콜백 함수로 각 원소에 대해서 짝수, 홀수 여부를 확인</li>\n<li>짝수면 res[0] + 1, 홀수면 res[1] + 1</li>\n<li>res 반환</li>\n</ol>\n<h4>코드</h4>\n<p>접근방법이 굉장히 다양했다. 짝수 홀수 검사를 하지 않고 2로 나눈 나머지를 바로 반환할 배열의 순서로 활용한 답이 많은 추천을 받았는데 나중에 사용할 수 있는 방법인 것 같다. 기억해야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num_list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    num_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"짝수 홀수 개수","date":"April 04, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120824"}},"previous":{"fields":{"slug":"/135/"},"frontmatter":{"title":"저주의 숫자 3"}},"next":{"fields":{"slug":"/137/"},"frontmatter":{"title":"나이 출력"}}},"pageContext":{"id":"09e8c28e-0fbb-53c3-9a11-22c38d5821ee","previousPostId":"e7470257-6a92-5aca-b9a7-8b8223056cde","nextPostId":"b1ac9940-00f5-5e23-9060-987db644e950"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}