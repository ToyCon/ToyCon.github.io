{"componentChunkName":"component---src-templates-blog-post-js","path":"/097/2023-02-28-practice55/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"cbf55a6d-b918-5308-a193-987452fb806c","excerpt":"대문자와 소문자 https://school.programmers.co.kr/learn/courses/30/lessons/120893 변수 문자열 my_string 제한사항 1 ≤ my_string의 길이 ≤ 1,000 my_string…","html":"<h3>대문자와 소문자</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120893\">https://school.programmers.co.kr/learn/courses/30/lessons/120893</a></p>\n<h4>변수</h4>\n<p>문자열 my_string</p>\n<h4>제한사항</h4>\n<p>1 ≤ my_string의 길이 ≤ 1,000<br>\nmy_string은 영어 대문자와 소문자로만 구성</p>\n<h4>순서</h4>\n<p>알파벳 문자의 변환은 메서드를 써서 쉽게 할 수 있기 때문에, 방법을 고민했다. 정규표현식으로 소문자 여부를 확인하고, 맞으면 대문자로, 그렇지 않으면 소문자로 변환하는 방식으로 접근했다.</p>\n<ol>\n<li>변수 res 선언하고 my_string.split('') 할당</li>\n<li>res에 반복문으로 match 메서드로 /[a-z]/와 일치하는지 확인</li>\n<li>맞으면 toUpperCase(), 그렇지 않으면 toLowerCase() 적용</li>\n<li>res.join('')을 반환</li>\n</ol>\n<h4>코드</h4>\n<p>toLowerCase의 값과 문자가 일치하는지 여부를 확인하는 방식으로 변환 없이 푸는 풀이가 있었다. 실제로 활용이 가능한 방법인 만큼 기억하고 있어야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">my_string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> my_string<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-z]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"대문자와 소문자","date":"February 28, 2023","description":null}},"previous":{"fields":{"slug":"/095/2023-02-27-practice54/"},"frontmatter":{"title":"영어가 싫어요"}},"next":{"fields":{"slug":"/098/2023-02-28-practice56/"},"frontmatter":{"title":"암호 해독"}}},"pageContext":{"id":"cbf55a6d-b918-5308-a193-987452fb806c","previousPostId":"beb32b54-75f2-5956-af69-3b2c771f7e60","nextPostId":"0e3cb3c1-9472-591b-96e2-a491afa5b906"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}