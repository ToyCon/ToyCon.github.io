{"componentChunkName":"component---src-templates-blog-post-js","path":"/150/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"dc2be7b5-d79d-52f7-af6f-446d236ce491","excerpt":"공 던지기 https://school.programmers.co.kr/learn/courses/30/lessons/120843 변수 정수 배열 numbers 정수 K 제한사항 공은 1번부터 던지며 오른쪽으로 한 명을 건너뛰고 그다음 사람에게만 던질 수 있음 2 < numbers…","html":"<h3>공 던지기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120843\">https://school.programmers.co.kr/learn/courses/30/lessons/120843</a></p>\n<h4>변수</h4>\n<p>정수 배열 numbers<br>\n정수 K</p>\n<h4>제한사항</h4>\n<p>공은 1번부터 던지며 오른쪽으로 한 명을 건너뛰고 그다음 사람에게만 던질 수 있음<br>\n2 &#x3C; numbers의 길이 &#x3C; 100<br>\n0 &#x3C; k &#x3C; 1,000<br>\nnumbers의 첫 번째와 마지막 번호는 실제로 바로 옆에 있음<br>\nnumbers는 1부터 시작하며 번호는 순서대로 올라감</p>\n<h4>풀이</h4>\n<p>수열이라고 생각하고 10번째 값까지 적어보니 2n-1번째 값을 찾는 수열 문제임을 확인했다. 추가로 배열의 인덱스는 0부터 시작하기 때문에, 구하는 값은 2n - 2에 해당하는 numbers의 원소다. numbers의 길이보다 길 경우 길이로 나눈 나머지를 인덱스에 넣는 방식으로 값을 찾았다.</p>\n<ol>\n<li>삼항연산자 조건으로 k * 2 - 2 > numbsers.length 확인</li>\n<li>만족하면 numbers[(k * 2 - 2) % numbers.length]</li>\n<li>그 외의 경우 numbers[k * 2 - 2]</li>\n<li>3을 반환</li>\n</ol>\n<h4>코드</h4>\n<p>다른 풀이를 살펴보니 2n - 2의 값을 numbers의 길이와 굳이 비교할 필요가 없었다. -- 연산자를 사용한 풀이도 있었는데 변수 앞에 먼저 --를 실행해서 k가 1일 때 바로 0으로 만드는 풀이도 있었다. (n - 1) * 2로 푸는 방법인데 이 쪽이 계산을 더 간단하게 만들어준다. 답이 정상적으로 구해지더라도 계산을 더 간소하게 할 수 있는지 꼭 제출 전에 살펴봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers<span class=\"token punctuation\">,</span> k</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> k <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">></span> numbers<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> numbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> numbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> numbers<span class=\"token punctuation\">[</span>k <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"공 던지기","date":"April 21, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120843"}},"previous":{"fields":{"slug":"/149/"},"frontmatter":{"title":"가위 바위 보"}},"next":{"fields":{"slug":"/151/"},"frontmatter":{"title":"배열 회전시키기"}}},"pageContext":{"id":"dc2be7b5-d79d-52f7-af6f-446d236ce491","previousPostId":"c96d8e27-4636-5876-9ee2-b74f9d1116d6","nextPostId":"8685e9e0-3b1f-5eb8-97e2-5b6df20e856b"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}