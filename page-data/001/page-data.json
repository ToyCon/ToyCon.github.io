{"componentChunkName":"component---src-templates-blog-post-js","path":"/001/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"edca06fc-6def-5b58-ad04-dfc0776c2e35","excerpt":"TypeScript를 쓰는 이유 52 10 JS는 Type이 다른데 알아서 계산을 해준다(Dynamic Typing). 여러명이 작업하면 이런 실수를 하거나 혹은 의도하지 않은 결과값을 반환해서 오류가 발생할 수 있다. TypeScript는 Type…","html":"<h3>TypeScript를 쓰는 이유</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>52<br>\n10</p>\n</blockquote>\n<p>JS는 Type이 다른데 알아서 계산을 해준다(Dynamic Typing). 여러명이 작업하면 이런 실수를 하거나 혹은 의도하지 않은 결과값을 반환해서 오류가 발생할 수 있다. TypeScript는 Type을 엄격하게 확인해서 의도하지 않은 오류를 막아준다. 그 외에 객체 지향 프로그래밍에 조금 더 적합하게 튜닝이 되어 있다는데 이건 지금은 체감 못하는 중이다.</p>\n<h3>TypeScript 설치</h3>\n<p>Nodejs 설치되어 있는지 확인한 뒤 터미널에서</p>\n<blockquote>\n<p>npm install -g typescript</p>\n</blockquote>\n<p>를 입력한다.</p>\n<details>\n<summary>오류날 경우</summary>\nnodejs 업데이트    \nwindows : powershell 관리자 권한으로 실행한 뒤 set-ExecutionPolicy Unrestricted 입력 → y    \nmac : sudo 붙여서 실행    \n</details>\n<p>설치 끝나면 TypeScript로 작업할 폴더로 이동해서 tsconfig.json 파일을 생성하고 TypeScript를 JavaScript로 컴파일할때 설정을 직접 작성해줘야 한다. 그 다음에 TypeScript로 작업을 시작하면 된다. JS로 변환하기 전 파일 확장자는 .ts</p>\n<p>그리고 TypeScript 파일은 nodejs에서 바로 실행할 수 없다. TypeScript로 작성한 파일을 실행하려면 JS로 변환이 필요하다. 터미널을 열고</p>\n<blockquote>\n<p>tsc -w</p>\n</blockquote>\n<p>입력 후 실행하면 작업을 저장할 때 마다 자동으로 JavaScript로 컴파일해 준다.</p>\n<h4>React에 적용</h4>\n<details>\n<summary>React 프로젝트에 적용</summary>\n<p>작업 폴더에서 터미널 열고\nnpm install --save typescript @types/node @types/react @types/react-dom @types jest\n입력</p>\n</details>\n<details>\n<summary>새로운 React 프로젝트 생성</summary>\n<p>프로젝트를 생성할 작업 폴더에서 터미널 열고\nnpx create-react-app my-app --template typescript\n입력</p>\n</details>\n<h4>Vue에 적용</h4>\n<p>작업 폴더에서 터미널 열고\nvue add typescript\n입력</p>\n<p>vue 파일에서 타입스크립트 활용하려면</p>\n<blockquote>\n<script lang=\"ts\">    \n</script>    \n</blockquote>\n<h3>TypeScript → JavaScript 자동변환</h3>\n<p>작업 폴더에서 터미널 열고</p>\n<blockquote>\n<p>tsc -w</p>\n</blockquote>\n<p>실행</p>","frontmatter":{"title":"TypeScript 설치와 적용","date":"July 11, 2022","description":"TypeScript 첫 번째 포스트"}},"previous":null,"next":{"fields":{"slug":"/002/"},"frontmatter":{"title":"tsconfig.json"}}},"pageContext":{"id":"edca06fc-6def-5b58-ad04-dfc0776c2e35","previousPostId":null,"nextPostId":"776ce410-ae46-5a5b-8dc2-3094921d25a4"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}