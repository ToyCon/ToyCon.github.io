{"componentChunkName":"component---src-templates-blog-post-js","path":"/164/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"5b0c02a6-f4d4-560c-9551-0a3971ced62e","excerpt":"소인수분해 https://school.programmers.co.kr/learn/courses/30/lessons/120852 변수 자연수 n 제한 2 ≤ n ≤ 10,000 풀이 짝수 여부를 확인한 뒤, 2로 나눈 수를 홀수로 나눠서 검사하는 방식으로 풀었다. 상수 res…","html":"<h3>소인수분해</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120852\">https://school.programmers.co.kr/learn/courses/30/lessons/120852</a></p>\n<h4>변수</h4>\n<p>자연수 n</p>\n<h4>제한</h4>\n<p>2 ≤ n ≤ 10,000</p>\n<h4>풀이</h4>\n<p>짝수 여부를 확인한 뒤, 2로 나눈 수를 홀수로 나눠서 검사하는 방식으로 풀었다.</p>\n<ol>\n<li>상수 res 선언하고 빈 배열 할당</li>\n<li>n % 2 === 0 이면 res에 2 추가</li>\n<li>위의 if문 내부에서 while (n % 2 === 0) n /= 2 실행</li>\n<li>for(i = 3; i * i &#x3C;= n; i+=2) 반복문 진입</li>\n<li>n % i === 0 이면 res에 i 추가</li>\n<li>5번 if문 내부에서 while(n % i === 0) n /= i 실행</li>\n<li>n > 2일 경우 res에 추가</li>\n<li>res.length가 0보다 큰지 확인, 크면 res, 그렇지 않으면 [n]을 반환</li>\n</ol>\n<h4>코드</h4>\n<p>문제 풀이에 오늘 하루를 거의 다 보냈다. 소수를 구하는 공식에서 에러가 나서 시간을 많이 잡아먹었고, 에러를 해결했는데도 테스트케이스를 통과하지 못해서 또 많이 고민해야했다. 공부해야할 다른 내용들이 많지만 굉장히 기본적인 것을 놓친 기분이 들어서 이 문제를 풀면서 생긴 의문들을 해소할때까지 다른 내용을 미뤄두고 우선 공부해볼 생각이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> n<span class=\"token operator\">/=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> n<span class=\"token operator\">/=</span>i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> res <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"소인수분해","date":"May 01, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120852"}},"previous":{"fields":{"slug":"/165/"},"frontmatter":{"title":"소인수분해 문제를 풀면서 발생했던 오류 파헤치기"}},"next":{"fields":{"slug":"/166/"},"frontmatter":{"title":"TIL6"}}},"pageContext":{"id":"5b0c02a6-f4d4-560c-9551-0a3971ced62e","previousPostId":"5fd50517-d2bd-50ea-8277-48bda9f4e927","nextPostId":"2491580e-94b9-51ce-833d-cb2f547e6de1"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}