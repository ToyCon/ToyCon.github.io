{"componentChunkName":"component---src-templates-blog-post-js","path":"/115/2023-03-13-practice66/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"d489811e-28ea-5a46-9d42-1570d02e11de","excerpt":"등수 매기기 https://school.programmers.co.kr/learn/courses/30/lessons/120882 변수 2차원 정수 배열 score 제한사항 0 ≤ score[0], score[1] ≤ 100 1 ≤ score의 길이 ≤ 10 score의 원소 길이는…","html":"<h3>등수 매기기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120882\">https://school.programmers.co.kr/learn/courses/30/lessons/120882</a></p>\n<h4>변수</h4>\n<p>2차원 정수 배열 score</p>\n<h4>제한사항</h4>\n<p>0 ≤ score[0], score[1] ≤ 100<br>\n1 ≤ score의 길이 ≤ 10<br>\nscore의 원소 길이는 2<br>\nscore는 중복된 원소를 갖지 않음</p>\n<h4>순서</h4>\n<p>점수가 겹치는 경우를 어떻게 처리할지 고민했다. 평균 점수를 별도의 배열에 담은 뒤 내림차순으로 정렬하고, 원본 배열의 평균 점수를 lastIndexOf 메서드를 사용해서 바로 입력하는 방식을 시도했다.</p>\n<ol>\n<li>상수 res 선언하고 빈 배열 할당</li>\n<li>상수 avr 선언하고 빈 배열 할당</li>\n<li>avr 배열에 score의 평균 점수를 순서대로 추가</li>\n<li>avr 배열을 오름차순으로 정렬</li>\n<li>res에 score의 평균 점수를 받아서 avr.lastIndexOf 메소드로 index 번호에 +1한 정수값을 추가</li>\n<li>res를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>같은 등수를 받으면 한 단계 내려가는 형식을 취한다고 생각했는데, 그렇지 않아서 indexOf를 사용해서 문제를 해결했다. 입출력 예시 2번을 보고 헷갈렸다. 문제를 더 꼼꼼히 읽어봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">score</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> avr <span class=\"token operator\">=</span> score<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> score<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> avr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"등수 매기기","date":"March 13, 2023","description":null}},"previous":{"fields":{"slug":"/114/2023-03-09JavaScript3/"},"frontmatter":{"title":"틸더 연산자"}},"next":{"fields":{"slug":"/116/2023-03-14-practice67/"},"frontmatter":{"title":"특이한 정렬"}}},"pageContext":{"id":"d489811e-28ea-5a46-9d42-1570d02e11de","previousPostId":"04743e98-8920-5391-b495-a65320f13cae","nextPostId":"77a06a30-23e0-5cba-917e-81bafb32b082"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}