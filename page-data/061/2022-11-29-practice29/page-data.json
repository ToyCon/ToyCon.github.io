{"componentChunkName":"component---src-templates-blog-post-js","path":"/061/2022-11-29-practice29/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"ec6be2f0-a22b-5d2a-9dfc-2c644248d9eb","excerpt":"옹알이 https://school.programmers.co.kr/learn/courses/30/lessons/120956 변수 문자열 배열 babbling 발음 가능한 문자열 \"aya\", \"ye\", \"woo\", \"ma…","html":"<h3>옹알이</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120956\">https://school.programmers.co.kr/learn/courses/30/lessons/120956</a></p>\n<h4>변수</h4>\n<p>문자열 배열 babbling<br>\n발음 가능한 문자열 \"aya\", \"ye\", \"woo\", \"ma\"</p>\n<h4>순서</h4>\n<p>발음 가능한 문자열은 문장 안에서 한 번만 등장하기 때문에, 발음 가능한 문자열을 빈 문자열로 대체하고 나서 babbling[i]가 빈문자열이 되면 count를 추가하는 방식으로 접근했다.</p>\n<ol>\n<li>발음 가능한 단어 갯수를 저장할 변수 count를 선언하고 0 할당</li>\n<li>for of 반복문 진입</li>\n<li>replace 메서드를 통해 aya를 빈 문자열로 치환</li>\n<li>같은 방식으로 나머지 세 문자열도 빈 문자열로 치환</li>\n<li>조건문으로 e가 빈 문자열인지 확인, 빈 문자열이면 count에 1을 더함</li>\n<li>count를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>첫 번째 테스트케이스부터 결과가 일치하지 않았다. wyeoo의 경우, we를 빈 문자열로 치환한 다음 woo만 남으니 woo도 발음이 가능한 단어로 인식되서 결과가 추가되는 것을 확인했다. 발음 가능한 문자열을 '1'로 치환하고, 치환 결과가 '1', '11', '111', '1111'인 경우에만 카운트가 올라가도록 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">babbling</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">of</span> babbling<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aya'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ye'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woo'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ma'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">||</span> e <span class=\"token operator\">===</span> <span class=\"token string\">'11'</span> <span class=\"token operator\">||</span> e <span class=\"token operator\">===</span> <span class=\"token string\">'111'</span> <span class=\"token operator\">||</span> e <span class=\"token operator\">===</span> <span class=\"token string\">'1111'</span><span class=\"token punctuation\">)</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"옹알이","date":"November 28, 2022","description":null}},"previous":{"fields":{"slug":"/060/2022-11-28-practice28/"},"frontmatter":{"title":"명예의 전당"}},"next":{"fields":{"slug":"/062/2022-11-30-practice30/"},"frontmatter":{"title":"문자열안에 문자열"}}},"pageContext":{"id":"ec6be2f0-a22b-5d2a-9dfc-2c644248d9eb","previousPostId":"6a34dba3-4613-51f3-807f-7fcd2e5375fe","nextPostId":"e1ec6065-d86e-529f-abe5-802eabed1e48"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}