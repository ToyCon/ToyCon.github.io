{"componentChunkName":"component---src-templates-blog-post-js","path":"/071/2022-12-29-practice39/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"fc51258b-bdfc-53e2-868e-4ceb88e48cff","excerpt":"배열의 유사도 https://school.programmers.co.kr/learn/courses/30/lessons/120903 변수 문자열 배열 s1, s2 제한사항 1 ≤ s1, s2의 길이 ≤ 100 1 ≤ s1, s2의 원소의 길이 ≤ 10 순서 s1과 s…","html":"<h3>배열의 유사도</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120903\">https://school.programmers.co.kr/learn/courses/30/lessons/120903</a></p>\n<h4>변수</h4>\n<p>문자열 배열 s1, s2</p>\n<h4>제한사항</h4>\n<p>1 ≤ s1, s2의 길이 ≤ 100<br>\n1 ≤ s1, s2의 원소의 길이 ≤ 10</p>\n<h4>순서</h4>\n<p>s1과 s2가 모두 배열로 주어지므로 메서드로 간단하게 접근이 가능하다고 판단했다. 반복문을 쓰지 않고 메서드만 사용하는 방법을 고민했다.</p>\n<ol>\n<li>s1.filter(e => )</li>\n<li>filter의 콜백함수 s2.findIndex(ele => ele === e) > 0</li>\n<li>1의 길이를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>위의 순서대로 작성을 했더니 오류가 나서 includes를 활용한 반복문으로 풀었다. 다른 사람들의 풀이를 보고 생각해보니 콜백을 findIdex 대신 includes를 썼으면 해결이 됐을 것 같다. 메서드 활용을 조금 더 고민해 봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s1<span class=\"token punctuation\">,</span> s2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">of</span> s1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> res<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"배열의 유사도","date":"December 29, 2022","description":null}},"previous":{"fields":{"slug":"/070/2022-12-15-practice38/"},"frontmatter":{"title":"세균 증식"}},"next":{"fields":{"slug":"/074/2023-01-05-practice41/"},"frontmatter":{"title":"문자열 계산하기"}}},"pageContext":{"id":"fc51258b-bdfc-53e2-868e-4ceb88e48cff","previousPostId":"bdb27558-f2c4-5534-87ea-856c5d968c3c","nextPostId":"112146ba-ddc7-594b-9fa6-11df470f2bfb"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}