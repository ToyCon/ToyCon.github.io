{"componentChunkName":"component---src-templates-blog-post-js","path":"/060/2022-11-28-practice28/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"6a34dba3-4613-51f3-807f-7fcd2e5375fe","excerpt":"명예의 전당 https://school.programmers.co.kr/learn/courses/30/lessons/138477 변수 명예의 전당 목록의 점수의 개수 k 1일부터 마지막 날까지 출연한 가수들의 점수 score…","html":"<h3>명예의 전당</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/138477\">https://school.programmers.co.kr/learn/courses/30/lessons/138477</a></p>\n<h4>변수</h4>\n<p>명예의 전당 목록의 점수의 개수 k<br>\n1일부터 마지막 날까지 출연한 가수들의 점수 score</p>\n<h4>순서</h4>\n<p>명예의 전당 목록에서 제일 낮은 점수를 배열로 저장하여 반환해야 한다. 명예의 전당을 저장할 별도의 변수를 선언한 뒤 새로운 가수의 점수를 비교하고, honor 배열의 제일 낮은 점수를 최종 답안에 추가하는 방식으로 접근했다.</p>\n<ol>\n<li>명예의 전당 배열을 담을 상수 honor를 선언하고 빈 배열 할당</li>\n<li>결과를 담을 상수 result를 선언하고 빈 배열 할당</li>\n<li>score의 배열 길이가 0보다 클 경우만 작동하는 while 반복문 진입</li>\n<li>변수 day를 선언하고 score.shift()를 할당</li>\n<li>honor.length &#x3C; k 인 경우 honor에 추가(push)하고 오름차순 정렬</li>\n<li>else 구문으로 (honor.length >= k인 경우) 조건문으로 day가 최저점수인 honor[0]보다 큰지 비교(같거나 작으면 honor를 바꿀 필요가 없음)</li>\n<li>honor 배열의 첫 번째 요소를 제거</li>\n<li>honor 배열에 day를 추가</li>\n<li>honor 배열을 오름차순으로 정렬</li>\n<li>조건문을 나와서 result에 honor[0]을 추가</li>\n<li>while 구문 밖에서 result를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>완전히 중복되는 코드를 보고 겹치는 부분을 합쳐보려고 했는데 잘 안됐다. 고민해봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k<span class=\"token punctuation\">,</span> score</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> honor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> day <span class=\"token operator\">=</span> score<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>honor<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            honor<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            honor<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>day <span class=\"token operator\">></span> honor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                honor<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                honor<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                honor<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>honor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"명예의 전당","date":"November 28, 2022","description":null}},"previous":{"fields":{"slug":"/059/2022-11-25-practice27/"},"frontmatter":{"title":"입국심사"}},"next":{"fields":{"slug":"/061/2022-11-29-practice29/"},"frontmatter":{"title":"옹알이"}}},"pageContext":{"id":"6a34dba3-4613-51f3-807f-7fcd2e5375fe","previousPostId":"1f8c817b-e514-5fe3-9e09-17230c20badb","nextPostId":"ec6be2f0-a22b-5d2a-9dfc-2c644248d9eb"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}