{"componentChunkName":"component---src-templates-blog-post-js","path":"/201/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"4fc3a5f5-4e5e-55e6-b47f-039311c3dd29","excerpt":"슬슬 기능을 구현하거나 수정하는 데 시간이 오래 걸려서 하루에 한 일을 정리하기가 쉽지 않다. 작업하면서 의문이 들었던 내용을 따로 적어뒀다가 검색해 보면서 학습을 하려고 한다. useState 추적 변수 댓글을 작성했을 때 자동으로 불러오도록 별도의 state…","html":"<p>슬슬 기능을 구현하거나 수정하는 데 시간이 오래 걸려서 하루에 한 일을 정리하기가 쉽지 않다. 작업하면서 의문이 들었던 내용을 따로 적어뒀다가 검색해 보면서 학습을 하려고 한다.</p>\n<ol>\n<li>useState 추적 변수\n<ul>\n<li>댓글을 작성했을 때 자동으로 불러오도록 별도의 state를 하나 생성하고 버튼 쪽에서 setState로 변경</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//댓글 작성했는지 여부를 확인하는 state</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>checkNewComment<span class=\"token punctuation\">,</span> setCheckNewComment<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//useEffect, 내용은 생략</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>checkNewComment<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//댓글 전송 버튼</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>acknowledged <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token function\">setCheckNewComment</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>checkNewComment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>createObjectURL\n<ul>\n<li>Presigned URL 방식을 사용하면 글을 최종적으로 등록하지 않아도 이미지가 S3에 업로드되서 비효율적</li>\n<li>별도의 변수 선언한뒤 URL.createObjectURL() 담아서 사용하고 사용이 끝나면 revokeObjectURL() 호출해서 지우기</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"TIL27","date":"July 18, 2023","description":"7월 18일 학습일지"}},"previous":{"fields":{"slug":"/200/"},"frontmatter":{"title":"TIL26"}},"next":null},"pageContext":{"id":"4fc3a5f5-4e5e-55e6-b47f-039311c3dd29","previousPostId":"85fbecde-da37-5dbf-8885-208f53251e7e","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}