{"componentChunkName":"component---src-templates-blog-post-js","path":"/088/2023-02-20-practice50/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"4de2f5ac-4221-5b8d-9c67-95224a1c7952","excerpt":"문자열 밀기 https://school.programmers.co.kr/learn/courses/30/lessons/120921 변수 문자열 A와 B 순서 맨 마지막 글자를 옮긴 A의 변형 문자열을 모두 만들어서 배열에 담은 다음, B와 비교해서 index…","html":"<h3>문자열 밀기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120921\">https://school.programmers.co.kr/learn/courses/30/lessons/120921</a></p>\n<h4>변수</h4>\n<p>문자열 A와 B</p>\n<h4>순서</h4>\n<p>맨 마지막 글자를 옮긴 A의 변형 문자열을 모두 만들어서 배열에 담은 다음, B와 비교해서 index 넘버를 반환하는 방식을 생각했는데 비효율적이라는 생각이 들어서 포기했다. 그냥 반복문을 사용해서 문자열을 비교해가며 사용하는 방식으로 접근했다.</p>\n<ol>\n<li>A와 B가 같은지 비교하여 같으면 0 반환</li>\n<li>for(i &#x3C; A.length 조건) 반복문 진입</li>\n<li>변수 letter를 선언하고 A의 마지막 글자를 할당</li>\n<li>A를 concat으로 letter와 병합하고 마지막 글자를 지운 다음 A에 재할당</li>\n<li>A와 B가 같으면 i가 0부터 시작하므로 i+1을 반환</li>\n<li>for문 안에서 조합이 되지 않으면 A와 B가 같아질 수 없으므로 -1을 반환</li>\n</ol>\n<h4>코드</h4>\n<p>매우 쉽게 해결할 수 있는 다른 사람의 풀이가 있어서 이번에도 풀고 나서 놀랐다. 메서드를 활용하는 방법을 꾸준히 고민해 봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">===</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> letter <span class=\"token operator\">=</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> letter<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">===</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"문자열 밀기","date":"February 20, 2023","description":null}},"previous":{"fields":{"slug":"/087/2023-02-17-practice49/"},"frontmatter":{"title":"2차원으로 만들기"}},"next":{"fields":{"slug":"/090/2023-02-22-practice51/"},"frontmatter":{"title":"약수 구하기"}}},"pageContext":{"id":"4de2f5ac-4221-5b8d-9c67-95224a1c7952","previousPostId":"7ff56645-c998-52b2-8b07-ad264de54961","nextPostId":"76284b9e-e7ad-5acf-bc47-e0187984d5ab"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}