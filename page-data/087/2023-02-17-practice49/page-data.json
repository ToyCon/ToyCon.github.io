{"componentChunkName":"component---src-templates-blog-post-js","path":"/087/2023-02-17-practice49/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"7ff56645-c998-52b2-8b07-ad264de54961","excerpt":"2차원으로 만들기 https://school.programmers.co.kr/learn/courses/30/lessons/120842 변수 정수 배열 num_list 정수 n…","html":"<h3>2차원으로 만들기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120842\">https://school.programmers.co.kr/learn/courses/30/lessons/120842</a></p>\n<h4>변수</h4>\n<p>정수 배열 num_list<br>\n정수 n</p>\n<h4>순서</h4>\n<p>메서드를 통해 접근해보려고 했는데, 적당한 메서드도 방법도 찾지 못했다. 평범하게 반복문을 사용하는 방식으로 풀었다.</p>\n<ol>\n<li>상수 res 선언하고 빈 배열 할당</li>\n<li>변수 arr 선언하고 빈 배열 할당</li>\n<li>while 반복문(num_list.length)</li>\n<li>num_list의 첫 번째 요소를 shift로 제거하고 arr에 push로 추가</li>\n<li>if(arr. length === n) res에 arr을 push로 추가하고 arr에 다시 빈 배열 할당</li>\n<li>res를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>다른 사람들의 답변을 봤는데 혹시나가 역시나… splice라는 메서드를 통해서 상당히 쉽게 문제를 해결했다. 메서드랑 친해지려는 노력을 계속 해야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num_list<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"2차원으로 만들기","date":"February 17, 2023","description":null}},"previous":{"fields":{"slug":"/086/2023-02-15-practice48/"},"frontmatter":{"title":"하샤드 수"}},"next":{"fields":{"slug":"/088/2023-02-20-practice50/"},"frontmatter":{"title":"문자열 밀기"}}},"pageContext":{"id":"7ff56645-c998-52b2-8b07-ad264de54961","previousPostId":"13f7d946-1f81-57a3-a3c8-cfbd0db34fe2","nextPostId":"4de2f5ac-4221-5b8d-9c67-95224a1c7952"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}