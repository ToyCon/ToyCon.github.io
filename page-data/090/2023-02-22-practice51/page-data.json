{"componentChunkName":"component---src-templates-blog-post-js","path":"/090/2023-02-22-practice51/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"76284b9e-e7ad-5acf-bc47-e0187984d5ab","excerpt":"약수 구하기 https://school.programmers.co.kr/learn/courses/30/lessons/120897 변수 정수 n 순서 예전에 반복문의 범위와 관련된 문제를 풀면서 약수, 제곱근을 활용한 방식이 효율적이라는 것을 기억하고 있어서 적용해보려고 했다. n…","html":"<h3>약수 구하기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120897\">https://school.programmers.co.kr/learn/courses/30/lessons/120897</a></p>\n<h4>변수</h4>\n<p>정수 n</p>\n<h4>순서</h4>\n<p>예전에 반복문의 범위와 관련된 문제를 풀면서 약수, 제곱근을 활용한 방식이 효율적이라는 것을 기억하고 있어서 적용해보려고 했다. n의 범위가 최대 10000으로 큰 계산을 요구하지 않기 때문에 일단 n/2까지로 범위를 정하고 반복문으로 배열에 담는 방식으로 진행했다.</p>\n<ol>\n<li>상수 arr 선언하고 빈 배열 할당</li>\n<li>for(i= 1; i &#x3C;= n/2; i++) 반복문 진입</li>\n<li>n % i === 0을 확인해서 맞으면 arr에 push로 추가</li>\n<li>arr에 n을 push로 추가</li>\n<li>arr을 반환</li>\n</ol>\n<h4>코드</h4>\n<p>다른 풀이법을 살펴보니 filter를 사용한 풀이법이 많았다. 많은 데이터를 처리해야 한다면 메서드 사용이 더 효율적일듯 하다. 항상 염두에 둬야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"약수 구하기","date":"February 22, 2023","description":null}},"previous":{"fields":{"slug":"/088/2023-02-20-practice50/"},"frontmatter":{"title":"문자열 밀기"}},"next":{"fields":{"slug":"/092/2023-02-23-practice52/"},"frontmatter":{"title":"한 번만 등장한 문자"}}},"pageContext":{"id":"76284b9e-e7ad-5acf-bc47-e0187984d5ab","previousPostId":"4de2f5ac-4221-5b8d-9c67-95224a1c7952","nextPostId":"b1f85e38-3ede-57a1-a53e-eeefe602b682"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}