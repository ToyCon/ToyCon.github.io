{"componentChunkName":"component---src-templates-blog-post-js","path":"/118/2023-03-16-practice69/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"cb6ecf30-7bc6-5b55-b9f0-60ab3b4c34ea","excerpt":"외계행성의 나이 https://school.programmers.co.kr/learn/courses/30/lessons/120834 변수 나이 age 제한사항 age는 자연수 age ≤ 1,00…","html":"<h3>외계행성의 나이</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120834\">https://school.programmers.co.kr/learn/courses/30/lessons/120834</a></p>\n<h4>변수</h4>\n<p>나이 age</p>\n<h4>제한사항</h4>\n<p>age는 자연수<br>\nage ≤ 1,000<br>\n알파벳 소문자만 사용</p>\n<h4>순서</h4>\n<p>숫자를 문자열로 치환한 다음 바로 소문자로 치환하는 방식을 생각했는데, 별도의 변수 선언 없이 숫자를 알파벳으로 바로 바꾸는 방법은 떠올릴 수 없었다. 알파벳 소문자를 별도의 배열에 담은 뒤 age에 반복문을 통해 모든 문자를 치환하는 방식으로 풀었다.</p>\n<ol>\n<li>변수 res 선언하고 빈 문자열과 age를 더한 값을 할당</li>\n<li>상수 spell 선언하고 [a, b, c, d, e, f, g, h, i, j] 할당</li>\n<li>for (i &#x3C; 10) 반복문 진입</li>\n<li>res에 replaceAll 메서드 적용, string(i)를 spell[i]로 변환한 값을 재할당</li>\n<li>res 반환</li>\n</ol>\n<h4>코드</h4>\n<p>숫자 ↔ 문자 변환 형태의 문제는 패턴이 정해져 있는데도 매번 애를 먹는 듯 하다. 다른 사람들 풀이를 보고 연구를 해봐야겠다. 쓸 일이 많을 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token string\">''</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spell <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spell<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"외계행성의 나이","date":"March 16, 2023","description":null}},"previous":{"fields":{"slug":"/117/2023-03-15-practice68/"},"frontmatter":{"title":"삼각형의 완성조건 (2)"}},"next":{"fields":{"slug":"/119/2023-03-17-practice70/"},"frontmatter":{"title":"배열 두 배 만들기"}}},"pageContext":{"id":"cb6ecf30-7bc6-5b55-b9f0-60ab3b4c34ea","previousPostId":"d9d06926-c9a9-5b56-984a-12efa978d701","nextPostId":"3ba18c30-8201-5414-95fa-93e2f662cfe5"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}