{"componentChunkName":"component---src-templates-blog-post-js","path":"/084/2023-02-06-practice46/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"0795c833-bfe6-5864-8df5-6c59f2e9d39b","excerpt":"다음에 올 숫자 https://school.programmers.co.kr/learn/courses/30/lessons/120924 변수 등차수열 혹은 등비수열 common 순서 common의 최소 길이가 3이므로, 등차/등비수열 여부를 앞의…","html":"<h3>다음에 올 숫자</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120924\">https://school.programmers.co.kr/learn/courses/30/lessons/120924</a></p>\n<h4>변수</h4>\n<p>등차수열 혹은 등비수열 common</p>\n<h4>순서</h4>\n<p>common의 최소 길이가 3이므로, 등차/등비수열 여부를 앞의 3개 요소를 통해 구분할 수 있다. 등비수열의 경우를 먼저 검사해서 맞으면 등비수열, 그렇지 않으면 등차수열로 계산하도록 작성했다.</p>\n<ol>\n<li>변수 count, res를 선언하고 0 할당</li>\n<li>조건문 common[1]/common[0] === commmon[2] / common[1] 이면 count에 common[1]/common[0] 할당</li>\n<li>res에 common[common.length - 1] * count를 할당</li>\n<li>그렇지 않으면 count에 common[1] - common[0]을 할당</li>\n<li>res에 common[common.length - 1] + count를 할당</li>\n<li>res를 반환</li>\n</ol>\n<h4>코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">common</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> count<span class=\"token punctuation\">,</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>common<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>common<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> common<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> common<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        count <span class=\"token operator\">=</span> common<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>common<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        res <span class=\"token operator\">=</span> common<span class=\"token punctuation\">[</span>common<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        count <span class=\"token operator\">=</span> common<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> common<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        res <span class=\"token operator\">=</span> common<span class=\"token punctuation\">[</span>common<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"다음에 올 숫자","date":"February 06, 2023","description":null}},"previous":{"fields":{"slug":"/078/2023-01-25-practice45/"},"frontmatter":{"title":"피자 나눠 먹기(3)"}},"next":{"fields":{"slug":"/085/2023-02-10-practice47/"},"frontmatter":{"title":"연속된 수의 합"}}},"pageContext":{"id":"0795c833-bfe6-5864-8df5-6c59f2e9d39b","previousPostId":"09a2678a-ff6d-5ad0-8416-2d2f75d36b81","nextPostId":"b241c653-31ac-5001-b56c-4c31e0e19801"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}