{"componentChunkName":"component---src-templates-blog-post-js","path":"/125/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"c07385c1-bf01-5fa8-a6ef-b19fc2c916a0","excerpt":"최빈값 구하기 https://school.programmers.co.kr/learn/courses/30/lessons/120812 변수 정수 배열 array 제한사항 0 < array의 길이 < 100 0 ≤ array의 원소 < 1000 풀이 원소의 범위가 0에서 99…","html":"<h3>최빈값 구하기</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120812\">https://school.programmers.co.kr/learn/courses/30/lessons/120812</a></p>\n<h4>변수</h4>\n<p>정수 배열 array</p>\n<h4>제한사항</h4>\n<p>0 &#x3C; array의 길이 &#x3C; 100<br>\n0 ≤ array의 원소 &#x3C; 1000</p>\n<h4>풀이</h4>\n<p>원소의 범위가 0에서 999사이의 정수이므로 큰 계산을 요구하지 않는다. 길이 1000의 별도의 배열을 선언하고 매개변수로 넘겨받은 array에 해당하는 배열[e]의 값을 1 더하는 과정을 통해 최대로 등장한 원소의 길이를 반환하는 방식으로 풀었다.</p>\n<ol>\n<li>상수 count 선언하고 Array 생성자로 길이 1000의 배열 생성, 모두 0으로 할당</li>\n<li>변수 maxNum 선언하고 0 할당</li>\n<li>array 모든 원소에 대해서 콜백 함수로 e => count[e]++ 실행</li>\n<li>maxNum에 array에서 가장 큰 값을 구조분해 할당으로 찾아서 할당</li>\n<li>count.indexOf(maxNum) === count.lastIndexOf(maxNum) 여부를 확인, 맞으면 count.indexOf(maxNum) 반환, 틀리면 -1 반환</li>\n</ol>\n<h4>코드</h4>\n<p>처음에 객체로 풀면 좋겠다는 생각을 했었는데, 아무리 생각해도 지나치게 많은 과정을 거치는 것 같아 시간을 두고 고민을 해서 풀이 과정을 줄일 수 있었다. 다른 사람들의 풀이를 보니 굉장히 다양한 방법으로 문제를 풀었다. 직관적으로 이해가 쉽지 않은 풀이도 많았는데 이해할 수 있도록 꼼꼼히 살펴봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> maxNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    array<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> count<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    maxNum <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>maxNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span>maxNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> count<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>maxNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"최빈값 구하기","date":"March 25, 2023","description":"https://school.programmers.co.kr/learn/courses/30/lessons/120812"}},"previous":{"fields":{"slug":"/124/"},"frontmatter":{"title":"중앙값 구하기"}},"next":{"fields":{"slug":"/126/"},"frontmatter":{"title":"모스부호 (1)"}}},"pageContext":{"id":"c07385c1-bf01-5fa8-a6ef-b19fc2c916a0","previousPostId":"6f5e2ec7-a971-5833-802f-a92ca57d7f8b","nextPostId":"2feaf717-a80e-5b70-be61-688339e07933"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}