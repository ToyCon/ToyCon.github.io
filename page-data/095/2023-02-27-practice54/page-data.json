{"componentChunkName":"component---src-templates-blog-post-js","path":"/095/2023-02-27-practice54/","result":{"data":{"site":{"siteMetadata":{"title":"ToyCon's Blog"}},"markdownRemark":{"id":"beb32b54-75f2-5956-af69-3b2c771f7e60","excerpt":"영어가 싫어요 https://school.programmers.co.kr/learn/courses/30/lessons/120894 변수 문자열 numbers 제한사항 numbers는 소문자 numbers는 공백없이 조합 1 ≤ numbers의 길이 ≤ 50…","html":"<h3>영어가 싫어요</h3>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120894\">https://school.programmers.co.kr/learn/courses/30/lessons/120894</a></p>\n<h4>변수</h4>\n<p>문자열 numbers</p>\n<h4>제한사항</h4>\n<p>numbers는 소문자<br>\nnumbers는 공백없이 조합<br>\n1 ≤ numbers의 길이 ≤ 50<br>\n0은 제일 앞에 오지 않음</p>\n<h4>순서</h4>\n<p>모든 알파벳 숫자를 검사하는 과정은 피할 수 없다고 생각했다. 반복문으로 1회씩 순회하는 방식으로 문자열 상에서 알파벳을 숫자로 바꾸는 방식으로 접근했다.</p>\n<ol>\n<li>상수 arr 선언하고 [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"] 할당</li>\n<li>for(i=0; i &#x3C; 10; i++) 반복문 진입</li>\n<li>arr[i]를 i로 치환</li>\n<li>반복문에서 나온 뒤 Number(numbers)를 반환</li>\n</ol>\n<h4>코드</h4>\n<p>풀이들이 대체로 비슷했는데 reduce를 활용한 풀이가 있었다. 다른 풀이들을 잘 살펴봐야겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"three\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"four\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"five\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"six\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"seven\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eight\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nine\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> numbers <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"영어가 싫어요","date":"February 24, 2023","description":null}},"previous":{"fields":{"slug":"/093/2023-02-24-practice53/"},"frontmatter":{"title":"인덱스 바꾸기"}},"next":{"fields":{"slug":"/097/2023-02-28-practice55/"},"frontmatter":{"title":"대문자와 소문자"}}},"pageContext":{"id":"beb32b54-75f2-5956-af69-3b2c771f7e60","previousPostId":"dadb47ac-62c7-5458-a0af-8014e359e5b4","nextPostId":"cbf55a6d-b918-5308-a193-987452fb806c"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}